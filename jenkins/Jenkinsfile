pipeline {
  agent any
  environment {
    REPORTS = "${WORKSPACE}/reports"
  }
  stages {
    stage('Prepare') {
      steps {
        sh '''
          mkdir -p reports/trivy reports/clair out tars
          docker compose -f clair/docker-compose.yml up -d
          trivy image --download-db-only || docker run --rm aquasec/trivy:latest image --download-db-only
        '''
      }
    }
    stage('Import TARs (optional)') {
      when { expression { return fileExists('tars') } }
      steps {
        sh 'bash scripts/import_all.sh ./tars subjects.yaml || true'
      }
    }
    stage('Scan - Trivy') {
      steps {
        sh 'bash scripts/scan_trivy.sh subjects.yaml'
      }
    }
    stage('Scan - Clair') {
      steps {
        sh 'bash scripts/scan_clair.sh subjects.yaml'
      }
    }
    stage('Aggregate') {
      steps {
        sh 'python3 scripts/aggregate.py reports out/metrics.csv'
      }
    }
    stage('Archive') {
      steps { archiveArtifacts artifacts: 'reports/**/*.json, out/*.csv', fingerprint: true }
    }
  }
}
